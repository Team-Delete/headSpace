{"ast":null,"code":"import _classCallCheck from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adrian/codefellows/301/headSpace/src/Jokes.js\";\nimport React from 'react';\n\nvar https = require(\"https\"); // Native module, no need to explicitly install\n\n\nvar baseURL = \"https://v2.jokeapi.dev\";\nvar categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\nvar params = [\"blacklistFlags=nsfw, religious, political, racist, sexist, explicit\", \"idRange=0-100\"];\nhttps.get(\"\".concat(baseURL, \"/joke/\").concat(categories.join(\",\"), \"?\").concat(params.join(\"&\")), function (res) {\n  console.log(\"\\n\");\n  res.on(\"data\", function (chunk) {\n    // On data received, convert it to a JSON object\n    var randomJoke = JSON.parse(chunk.toString());\n\n    if (randomJoke.type == \"single\") {\n      // If type == \"single\", the joke only has the \"joke\" property\n      console.log(randomJoke.joke);\n      console.log(\"\\n\");\n    } else {\n      // If type == \"twopart\", the joke has the \"setup\" and \"delivery\" properties\n      console.log(randomJoke.setup);\n      setTimeout(function () {\n        console.log(randomJoke.delivery);\n        console.log(\"\\n\");\n      }, 3000);\n    }\n  });\n  res.on(\"error\", function (err) {\n    // On error, log to console\n    console.error(\"Error: \".concat(err));\n  });\n}); // API CALL\n\nvar JokeAPI = require('sv443-joke-api');\n\nJokeAPI.getJokes().then(function (res) {\n  return res.json();\n}).then(function (data) {\n  console.log(data);\n}); // STATIC NO DB required\n// \n\nvar Jokes = /*#__PURE__*/function (_React$Component) {\n  _inherits(Jokes, _React$Component);\n\n  function Jokes() {\n    _classCallCheck(this, Jokes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Jokes).apply(this, arguments));\n  }\n\n  _createClass(Jokes, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"head\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"Hello!\"));\n    }\n  }]);\n\n  return Jokes;\n}(React.Component);\n\nexport default Jokes;","map":{"version":3,"sources":["/Users/adrian/codefellows/301/headSpace/src/Jokes.js"],"names":["React","https","require","baseURL","categories","params","get","join","res","console","log","on","chunk","randomJoke","JSON","parse","toString","type","joke","setup","setTimeout","delivery","err","error","JokeAPI","getJokes","then","json","data","Jokes","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAAgC;;;AAEhC,IAAMC,OAAO,GAAG,wBAAhB;AACA,IAAMC,UAAU,GAAG,CAAC,aAAD,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,WAAzC,CAAnB;AACA,IAAMC,MAAM,GAAG,CACX,qEADW,EAEX,eAFW,CAAf;AAKAJ,KAAK,CAACK,GAAN,WAAaH,OAAb,mBAA6BC,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAA7B,cAAqDF,MAAM,CAACE,IAAP,CAAY,GAAZ,CAArD,GAAyE,UAAAC,GAAG,EAAI;AAC5EC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,EAAAA,GAAG,CAACG,EAAJ,CAAO,MAAP,EAAe,UAAAC,KAAK,EAAI;AACpB;AACA,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,QAAN,EAAX,CAAjB;;AAEA,QAAGH,UAAU,CAACI,IAAX,IAAmB,QAAtB,EACA;AACI;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACK,IAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KALD,MAOA;AACI;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACM,KAAvB;AACAC,MAAAA,UAAU,CAAC,YAAM;AACbX,QAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACQ,QAAvB;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,OAHS,EAGP,IAHO,CAAV;AAIH;AACJ,GAnBD;AAqBAF,EAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAAAW,GAAG,EAAI;AACnB;AACAb,IAAAA,OAAO,CAACc,KAAR,kBAAwBD,GAAxB;AACH,GAHD;AAIH,CA3BD,E,CA8BA;;AACA,IAAME,OAAO,GAAGtB,OAAO,CAAC,gBAAD,CAAvB;;AAEAsB,OAAO,CAACC,QAAR,GACGC,IADH,CACQ,UAAClB,GAAD;AAAA,SAASA,GAAG,CAACmB,IAAJ,EAAT;AAAA,CADR,EAEGD,IAFH,CAEQ,UAACE,IAAD,EAAU;AACdnB,EAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ;AACD,CAJH,E,CAOA;AAEA;;IAEMC,K;;;;;;;;;;;6BACK;AACP,0BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;;;EARiB7B,KAAK,CAAC8B,S;;AAU1B,eAAeD,KAAf","sourcesContent":["import React from 'react';\n\nconst https = require(\"https\"); // Native module, no need to explicitly install\n\nconst baseURL = \"https://v2.jokeapi.dev\";\nconst categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\nconst params = [\n    \"blacklistFlags=nsfw, religious, political, racist, sexist, explicit\",\n    \"idRange=0-100\"\n];\n\nhttps.get(`${baseURL}/joke/${categories.join(\",\")}?${params.join(\"&\")}`, res => {\n    console.log(\"\\n\");\n    res.on(\"data\", chunk => {\n        // On data received, convert it to a JSON object\n        let randomJoke = JSON.parse(chunk.toString());\n\n        if(randomJoke.type == \"single\")\n        {\n            // If type == \"single\", the joke only has the \"joke\" property\n            console.log(randomJoke.joke);\n            console.log(\"\\n\");\n        }\n        else\n        {\n            // If type == \"twopart\", the joke has the \"setup\" and \"delivery\" properties\n            console.log(randomJoke.setup);\n            setTimeout(() => {\n                console.log(randomJoke.delivery);\n                console.log(\"\\n\");\n            }, 3000);\n        }\n    });\n\n    res.on(\"error\", err => {\n        // On error, log to console\n        console.error(`Error: ${err}`);\n    });\n});\n\n\n// API CALL\nconst JokeAPI = require('sv443-joke-api');\n\nJokeAPI.getJokes()\n  .then((res) => res.json())\n  .then((data) => {\n    console.log(data)\n  })\n\n\n// STATIC NO DB required\n\n// \n\nclass Jokes extends React.Component {\n  render() {\n    return (\n      <>\n        <head></head>\n        <h2>Hello!</h2>\n      </>\n    )\n  }\n}\nexport default Jokes;"]},"metadata":{},"sourceType":"module"}