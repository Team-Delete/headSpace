{"ast":null,"code":"import _classCallCheck from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adrian/codefellows/301/headSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adrian/codefellows/301/headSpace/src/Jokes.js\";\nimport React from 'react';\n\nvar Jokes = /*#__PURE__*/function (_React$Component) {\n  _inherits(Jokes, _React$Component);\n\n  function Jokes(props) {\n    var _this;\n\n    _classCallCheck(this, Jokes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Jokes).call(this, props));\n\n    var https = require(\"https\"); // Native module, no need to explicitly install\n\n\n    _this.state = {};\n    var baseURL = \"https://v2.jokeapi.dev\";\n    var categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\n    var params = [\"blacklistFlags=nsfw, religious, political, racist, sexist, explicit\", \"idRange=0-100\"];\n    https.get(\"\".concat(baseURL, \" /joke/\").concat(categories.join(\",\"), \"?\").concat(params.join(\"&\"), \" \"), function (res) {\n      console.log(\"\\n\");\n      res.on(\"data\", function (chunk) {\n        // On data received, convert it to a JSON object\n        var randomJoke = JSON.parse(chunk.toString());\n\n        if (randomJoke.type === \"single\") {\n          // If type == \"single\", the joke only has the \"joke\" property\n          console.log(randomJoke.joke);\n          console.log(\"\\n\");\n        } else {\n          // If type == \"twopart\", the joke has the \"setup\" and \"delivery\" properties\n          console.log(randomJoke.setup);\n          setTimeout(function () {\n            console.log(randomJoke.delivery);\n            console.log(\"\\n\");\n          }, 3000);\n        }\n      });\n      res.on(\"error\", function (err) {\n        // On error, log to console\n        console.error(\"Error: \".concat(err, \" \"));\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Jokes, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, \"Jokes\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"joke-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"joke--text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Joke Text\")));\n    }\n  }]);\n\n  return Jokes;\n}(React.Component);\n\nexport default Jokes;","map":{"version":3,"sources":["/Users/adrian/codefellows/301/headSpace/src/Jokes.js"],"names":["React","Jokes","props","https","require","state","baseURL","categories","params","get","join","res","console","log","on","chunk","randomJoke","JSON","parse","toString","type","joke","setup","setTimeout","delivery","err","error","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,K;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AAEA,QAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,CAHiB,CAGe;;;AAChC,UAAKC,KAAL,GAAa,EAAb;AACA,QAAMC,OAAO,GAAG,wBAAhB;AACA,QAAMC,UAAU,GAAG,CAAC,aAAD,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,WAAzC,CAAnB;AACA,QAAMC,MAAM,GAAG,CACb,qEADa,EAEb,eAFa,CAAf;AAKAL,IAAAA,KAAK,CAACM,GAAN,WAAaH,OAAb,oBAA8BC,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAA9B,cAAsDF,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAtD,QAA2E,UAAAC,GAAG,EAAI;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,MAAAA,GAAG,CAACG,EAAJ,CAAO,MAAP,EAAe,UAAAC,KAAK,EAAI;AACtB;AACA,YAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,QAAN,EAAX,CAAjB;;AAEA,YAAIH,UAAU,CAACI,IAAX,KAAoB,QAAxB,EAAkC;AAChC;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACK,IAAvB;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,SAJD,MAKK;AACH;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACM,KAAvB;AACAC,UAAAA,UAAU,CAAC,YAAM;AACfX,YAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACQ,QAAvB;AACAZ,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,WAHS,EAGP,IAHO,CAAV;AAID;AACF,OAjBD;AAmBAF,MAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAAAW,GAAG,EAAI;AACrB;AACAb,QAAAA,OAAO,CAACc,KAAR,kBAAwBD,GAAxB;AACD,OAHD;AAID,KAzBD;AAZiB;AAsClB;;;;6BAKQ;AACP,0BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,CADF;AAQD;;;;EArDiBzB,KAAK,CAAC2B,S;;AAuD1B,eAAe1B,KAAf","sourcesContent":["import React from 'react';\n\nclass Jokes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const https = require(\"https\"); // Native module, no need to explicitly install\n    this.state = {};\n    const baseURL = \"https://v2.jokeapi.dev\";\n    const categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\n    const params = [\n      \"blacklistFlags=nsfw, religious, political, racist, sexist, explicit\",\n      \"idRange=0-100\"\n    ];\n\n    https.get(`${baseURL} /joke/${categories.join(\",\")}?${params.join(\"&\")} `, res => {\n      console.log(\"\\n\");\n      res.on(\"data\", chunk => {\n        // On data received, convert it to a JSON object\n        let randomJoke = JSON.parse(chunk.toString());\n\n        if (randomJoke.type === \"single\") {\n          // If type == \"single\", the joke only has the \"joke\" property\n          console.log(randomJoke.joke);\n          console.log(\"\\n\");\n        }\n        else {\n          // If type == \"twopart\", the joke has the \"setup\" and \"delivery\" properties\n          console.log(randomJoke.setup);\n          setTimeout(() => {\n            console.log(randomJoke.delivery);\n            console.log(\"\\n\");\n          }, 3000);\n        }\n      });\n\n      res.on(\"error\", err => {\n        // On error, log to console\n        console.error(`Error: ${err} `);\n      });\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <>\n        <h2>Jokes</h2>\n        <div id=\"joke-container\">\n          <h2 id=\"joke--text\">Joke Text</h2>\n        </div>\n      </>\n    )\n  }\n}\nexport default Jokes;\n"]},"metadata":{},"sourceType":"module"}